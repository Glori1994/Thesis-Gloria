#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 12, face= "bold", family = "Roboto")) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2")) +
#theme_bw()+
theme(text = element_text(size = 35, family = "Roboto", face = "bold"),
axis.text= element_text(size= 15, face = "plain"),
strip.text.x = element_text(size = 15, face= "bold", family = "Roboto"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title.align = 0.5)#+
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
#Hacemos el vector con los nombres de las gráficas
organisms<- c("Actinaria", "C. macroalgae", "CCA", "Cyano", "Dictyota spp.",
"F. macroalgae", "Octocoral", "Rubble", "Sand", "Scle. coral",
"Sponges", "Turf", "Unknown")
names(organisms)<-c("Actinaria", "Calcareous.macroalgae", "Crustose.coraline", "Cyanobacteria", "Dictyota.sp.",
"Fleshy.macroalgae", "Octocoral", "Rubble", "Sand", "Scleractinian.coral",
"Sponges", "Turf", "Unknown")
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 12, face= "bold", family = "Roboto")) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2")) +
#theme_bw()+
theme(text = element_text(size = 35, family = "Roboto", face = "bold"),
axis.text= element_text(size= 15, face = "plain"),
strip.text.x = element_text(size = 15, face= "bold", family = "Roboto"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title.align = 0.5)#+
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
#Hacemos el vector con los nombres de las gráficas
organisms<- c("Actinaria", "C. macro", "CCA", "Cyano", "Dictyota",
"F. macro", "Octocoral", "Rubble", "Sand", "Scle. coral",
"Sponges", "Turf", "Unknown")
names(organisms)<-c("Actinaria", "Calcareous.macroalgae", "Crustose.coraline", "Cyanobacteria", "Dictyota.sp.",
"Fleshy.macroalgae", "Octocoral", "Rubble", "Sand", "Scleractinian.coral",
"Sponges", "Turf", "Unknown")
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 12, face= "bold", family = "Roboto")) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2")) +
#theme_bw()+
theme(text = element_text(size = 35, family = "Roboto", face = "bold"),
axis.text= element_text(size= 15, face = "plain"),
strip.text.x = element_text(size = 15, face= "bold", family = "Roboto"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title.align = 0.5)#+
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
#Hacemos el vector con los nombres de las gráficas
organisms<- c("Actinaria", "C. macro", "CCA", "Cyano", "Dictyota",
"F. macro", "Octocoral", "Rubble", "Sand", "Scle. coral",
"Sponges", "Turf", "Unknown")
names(organisms)<-c("Actinaria", "Calcareous.macroalgae", "Crustose.coraline", "Cyanobacteria", "Dictyota.sp.",
"Fleshy.macroalgae", "Octocoral", "Rubble", "Sand", "Scleractinian.coral",
"Sponges", "Turf", "Unknown")
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 12, face= "bold", family = "Roboto")) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2")) +
#theme_bw()+
theme(text = element_text(size = 25, family = "Roboto", face = "bold"),
axis.text= element_text(size= 15, face = "plain"),
strip.text.x = element_text(size = 15, face= "bold", family = "Roboto"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title.align = 0.5)#+
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 12, face= "bold", family = "Roboto")) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2")) +
#theme_bw()+
theme(text = element_text(size = 20, family = "Roboto", face = "bold"),
axis.text= element_text(size= 15, face = "plain"),
strip.text.x = element_text(size = 15, face= "bold", family = "Roboto"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title.align = 0.5)#+
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
ggsave("benthic cover.png")#, units = c("cm"), width = 10, height = 10, dpi= 300)
#theme_bw()+
theme(text = element_text(size = 25, family = "Roboto", face = "bold"),
axis.text= element_text(size= 20, face = "plain"),
strip.text.x = element_text(size = 20, face= "bold", family = "Roboto"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title.align = 0.5)#+
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
#Hacemos el vector con los nombres de las gráficas
organisms<- c("Actinaria", "Macroalgae C.", "CCA", "Cyano", "Dictyota",
"Macroalgae F.", "Octocoral", "Rubble", "Sand", "Scle. coral",
"Sponges", "Turf", "Unknown")
names(organisms)<-c("Actinaria", "Calcareous.macroalgae", "Crustose.coraline", "Cyanobacteria", "Dictyota.sp.",
"Fleshy.macroalgae", "Octocoral", "Rubble", "Sand", "Scleractinian.coral",
"Sponges", "Turf", "Unknown")
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 12, face= "bold", family = "Roboto")) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2")) +
#theme_bw()+
theme(text = element_text(size = 25, family = "Roboto", face = "bold"),
axis.text= element_text(size= 20, face = "plain"),
strip.text.x = element_text(size = 20, face= "bold", family = "Roboto"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title.align = 0.5)#+
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
#Hacemos el vector con los nombres de las gráficas
organisms<- c("Actinaria", "Macroalgae C.", "CCA", "Cyano", "Dictyota",
"Macroalgae F.", "Octocoral", "Rubble", "Sand", "Scle. coral",
"Sponges", "Turf", "Unknown")
names(organisms)<-c("Actinaria", "Calcareous.macroalgae", "Crustose.coraline", "Cyanobacteria", "Dictyota.sp.",
"Fleshy.macroalgae", "Octocoral", "Rubble", "Sand", "Scleractinian.coral",
"Sponges", "Turf", "Unknown")
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 12, face= "bold", family = "Roboto")) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2")) +
#theme_bw()+
theme(text = element_text(size = 35, family = "Roboto", face = "bold"),
axis.text= element_text(size= 25, face = "plain"),
strip.text.x = element_text(size = 25, face= "bold", family = "Roboto"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title.align = 0.5)#+
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
ggsave("benthic cover.png")#, units = c("cm"), width = 10, height = 10, dpi= 300)
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 12, face= "bold", family = "Roboto")) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2")) +
#theme_bw()+
theme(text = element_text(size = 35, family = "Roboto", face = "bold"),
axis.text= element_text(size= 35, face = "plain"),
strip.text.x = element_text(size = 35, face= "bold", family = "Roboto"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title.align = 0.5)#+
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 12, face= "bold", family = "Roboto")) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2")) +
#theme_bw()+
theme(text = element_text(size = 35, family = "Roboto", face = "bold"),
axis.text= element_text(size= 35, face = "plain"),
strip.text.x = element_text(size = 35, face= "bold", family = "Roboto"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title.align = 0.5)#+
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 12, face= "bold", family = "Roboto")) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2")) +
#theme_bw()+
theme(text = element_text(size = 35, family = "Roboto", face = "bold"),
axis.text= element_text(size= 35, face = "plain"),
strip.text.x = element_text(size = 35, face= "bold", family = "Roboto"),
axis.text.x = element_blank(size= 35, face= "bold", family= "Roboto"),
axis.ticks.x = element_blank(size= 35, face= "bold", family= "Roboto"),
legend.title.align = 0.5)#+
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 12, face= "bold", family = "Roboto")) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2"))
print(grafica)
ggsave("benthic cover.png")#, units = c("cm"), width = 10, height = 10, dpi= 300)
warnings()
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 25, face= "bold", family = "Roboto")) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2"))
showtext_auto()
print(grafica)
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 25, face= "bold", family = "Roboto"),
axis.text.x =element_text(size = 25, face= "bold", family = "Roboto" ))
showtext_auto()
print(grafica)
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(strip.text.x = element_text(size = 25, face= "bold", family = "Roboto"),
axis.text.x =element_text(size = 25, face= "bold", family = "Roboto" ),#numeros de la leyenda x
axis.text.y= element_text(size = 25, face= "bold", family = "Roboto"),
legend.text = element_text(size = 25, face= "bold", family = "Roboto"),
)
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(text = element_text(size = 35, family = "Roboto", face = "bold"),
strip.text.x = element_text(size = 25, face= "bold", family = "Roboto"),
axis.text.x =element_text(size = 25, face= "bold", family = "Roboto" ),#numeros de la leyenda x
axis.text.y= element_text(size = 25, face= "bold", family = "Roboto"),
legend.text = element_text(size = 25, face= "bold", family = "Roboto"),
)
#theme(text = element_text(size = 15, family = "Roboto", face = "bold"), axis.text= element_text(size= 10, face = "plain"))
showtext_auto()
print(grafica)
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(text = element_text(size = 35, family = "Roboto", face = "bold"),
strip.text.x = element_text(size = 25, face= "plain", family = "Roboto"),
axis.text.x =element_text(size = 25, face= "plain", family = "Roboto" ),#numeros de la leyenda x
axis.text.y= element_text(size = 25, face= "plain", family = "Roboto"),
legend.text = element_text(size = 25, face= "plain", family = "Roboto"),
)
showtext_auto()
print(grafica)
ggsave("benthic cover.png")#, units = c("cm"), width = 10, height = 10, dpi= 300)
#Hacemos el vector con los nombres de las gráficas
organisms<- c("Actinaria", "Calcareous macroalgae.", "CCA", "Cyanobacteria", "Dictyota",
"Fleshy macroalgae", "Octocoral", "Rubble", "Sand", "Scleractinian coral",
"Sponges", "Turf", "Unknown")
names(organisms)<-c("Actinaria", "Calcareous.macroalgae", "Crustose.coraline", "Cyanobacteria", "Dictyota.sp.",
"Fleshy.macroalgae", "Octocoral", "Rubble", "Sand", "Scleractinian.coral",
"Sponges", "Turf", "Unknown")
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(text = element_text(size = 35, family = "Roboto", face = "bold"),
strip.text.x = element_text(size = 25, face= "plain", family = "Roboto"),
axis.text.x =element_text(size = 25, face= "plain", family = "Roboto" ),#numeros de la leyenda x
axis.text.y= element_text(size = 25, face= "plain", family = "Roboto"),
legend.text = element_text(size = 25, face= "plain", family = "Roboto"),
)
showtext_auto()
print(grafica)
ggsave("benthic cover.png")#, units = c("cm"), width = 10, height = 10, dpi= 300)
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(text = element_text(size = 35, family = "Roboto", face = "bold"),
strip.text.x = element_text(size = 25, face= "plain", family = "Roboto"),
axis.text.x =element_text(size = 25, face= "plain", family = "Roboto" ),#numeros de la leyenda x
axis.text.y= element_text(size = 25, face= "plain", family = "Roboto"),
legend.text = element_text(size = 25, face= "plain", family = "Roboto"),
) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Set3")) +
#theme_bw()+
showtext_auto()
print(grafica)
ggsave("benthic cover.png")#, units = c("cm"), width = 10, height = 10, dpi= 300)
#Hacemos el vector con los nombres de las gráficas
organisms<- c("Actinaria", "Calcareous macroalgae.", "CCA", "Cyanobacteria", "Dictyota",
"Fleshy macroalgae", "Octocoral", "Rubble", "Sand", "Scleractinian coral",
"Sponges", "Turf", "Unknown")
names(organisms)<-c("Actinaria", "Calcareous.macroalgae", "Crustose.coraline", "Cyanobacteria", "Dictyota.sp.",
"Fleshy.macroalgae", "Octocoral", "Rubble", "Sand", "Scleractinian.coral",
"Sponges", "Turf", "Unknown")
#Grafica
grafica<- Data %>%
pivot_longer(cols = 4:ncol(Data), names_to = "Organism", values_to = "Cover") %>%
ggplot(aes(x = Tiempo, y = Cover, color = Cuadrata)) +
geom_point(size = 2) +
geom_line(size = 1) + xlab("Time") +
facet_wrap(~ Organism, ncol = 4, labeller = labeller(Organism= organisms)) + # change for the following line if you want free Y scales
theme(text = element_text(size = 35, family = "Roboto", face = "bold"),
strip.text.x = element_text(size = 25, face= "plain", family = "Roboto"),
axis.text.x =element_text(size = 25, face= "plain", family = "Roboto" ),#numeros de la leyenda x
axis.text.y= element_text(size = 25, face= "plain", family = "Roboto"),
legend.text = element_text(size = 25, face= "plain", family = "Roboto"),
) +
#facet_wrap(~ Organism, ncol = 3, scales = "free_y") +
scale_color_manual("Quadrat", values = brewer.pal(8, "Dark2")) +
#theme_bw()+
showtext_auto()
print(grafica)
ggsave("benthic cover.png")
require(readxl)
require(ggplot2)
Data <- read_xlsx("tc intervalos 4-1.xlsx")
Data <- Data[, -1]
require(reshape2)
Data <- melt(Data)
Data$variable <- paste("T", Data$variable, sep = "")
Data$value[Data$value == 0] <- NA
Data$Especie <- gsub(" |[0-9]|sp", "", Data$Individuo)
Data$Count <- 1
Data$Count[is.na(Data$value)] <- 0
Data$Individuo <- paste(Data$Cuadrata, Data$Individuo, sep = "_")
require(dplyr)
Data2 <- aggregate(value ~ Especie + Individuo + `SobreviviÃ³ hasta T4`, data = Data, FUN = mean)
Genera <- c("Agaricia", "Agaricia", "Colpophylia", "Orbicella", "Porites", "Porites", "Colpophylia", "Orbicella", "Siderastrea")
for(i in 1:length(unique(Data2$Especie))) {
Data2$Genera[Data2$Especie %in% unique(Data2$Especie)[i]] <- Genera[i]
}
ggplot(Data2, aes(x = Genera, fill = `SobreviviÃ³ hasta T4`, y = value)) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +
geom_point(shape = 21, position = position_jitterdodge(0.2)) +
theme_bw()
#Numero de individuos unicos en las cuadratas
#Llamar los paquetes de interÃ©s
library(readxl)
library(dplyr)
#El primer paso es abrir la hoja de Excel de interÃ©s
abundancia_total<-read_xlsx("Matriz Madre.xlsx", sheet= 1)
#Vemos el nombre de todas las cuadratas
unique(abundancia_total$Cuadrata)
#Buscamos el numero de individuos unicos para cada cuadrata
unicos_C4<-filter(abundancia_total, Cuadrata== "C04")
C04<-unique(unicos_C4$Individuo) #Extraigo los valores unicos de los nombres de los individuos observados en la cuadrata 4
C04
a<-length(C04) #con el largo puedo ver cuantos individuos unicos habia en la cuadrata en todos los tiempos
a
unicos_C06<-filter(abundancia_total, Cuadrata == "C06")
C06<-c(as.character(unique(unicos_C06$Individuo)))
b<-length(C06)
b
unicos_C12<-filter(abundancia_total, Cuadrata == "C12")
C12<-c(as.character(unique(unicos_C12$Individuo)))
c<-length(C12)
c
unicos_C13<-filter(abundancia_total, Cuadrata == "C13")
C13<-c(as.character(unique(unicos_C13$Individuo)))
d<-length(C13)
d
unicos_C15<-filter(abundancia_total, Cuadrata == "C15")
C15<-c(as.character(unique(unicos_C15$Individuo)))
e<-length(C15)
e
unicos_C16<-filter(abundancia_total, Cuadrata == "C16")
C16<-c(as.character(unique(unicos_C16$Individuo)))
f<-length(C16)
f
unicos_C27<-filter(abundancia_total, Cuadrata == "C27")
C27<-c(as.character(unique(unicos_C27$Individuo)))
g<-length(C27)
g
unicos_C28<-filter(abundancia_total, Cuadrata == "C28")
C28<-c(as.character(unique(unicos_C28$Individuo)))
h<-length(C28)
h
class(h)
sum(a,b,c,d,e,f,g,h)
unique_individuals<-sum(a,b,c,d,e,f,g,h)
unique_individuals
#Numero de individuos unicos en las cuadratas
#Llamar los paquetes de interÃ©s
library(readxl)
library(dplyr)
#El primer paso es abrir la hoja de Excel de interÃ©s
abundancia_total<-read_xlsx("Matriz Madre.xlsx", sheet= 1)
#Vemos el nombre de todas las cuadratas
unique(abundancia_total$Cuadrata)
#Buscamos el numero de individuos unicos para cada cuadrata
unicos_C4<-filter(abundancia_total, Cuadrata== "C04")
C04<-unique(unicos_C4$Individuo) #Extraigo los valores unicos de los nombres de los individuos observados en la cuadrata 4
C04
a<-length(C04) #con el largo puedo ver cuantos individuos unicos habia en la cuadrata en todos los tiempos
a
unicos_C06<-filter(abundancia_total, Cuadrata == "C06")
C06<-c(as.character(unique(unicos_C06$Individuo)))
b<-length(C06)
b
unicos_C12<-filter(abundancia_total, Cuadrata == "C12")
C12<-c(as.character(unique(unicos_C12$Individuo)))
c<-length(C12)
c
unicos_C13<-filter(abundancia_total, Cuadrata == "C13")
C13<-c(as.character(unique(unicos_C13$Individuo)))
d<-length(C13)
d
unicos_C15<-filter(abundancia_total, Cuadrata == "C15")
C15<-c(as.character(unique(unicos_C15$Individuo)))
e<-length(C15)
e
unicos_C16<-filter(abundancia_total, Cuadrata == "C16")
C16<-c(as.character(unique(unicos_C16$Individuo)))
f<-length(C16)
f
unicos_C27<-filter(abundancia_total, Cuadrata == "C27")
C27<-c(as.character(unique(unicos_C27$Individuo)))
g<-length(C27)
g
unicos_C28<-filter(abundancia_total, Cuadrata == "C28")
C28<-c(as.character(unique(unicos_C28$Individuo)))
h<-length(C28)
h
class(h)
sum(a,b,c,d,e,f,g,h)
unique_individuals<-sum(a,b,c,d,e,f,g,h)
unique_individuals
